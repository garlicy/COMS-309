package com.example.gamedesign;

import org.springframework.beans.factory.annotation.Autowired;

//import org.springframework.ui.Model;
//import org.springframework.validation.BindingResult;
//import org.springframework.web.bind.annotation.*;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
//
//import org.springframework.security.core.userdetails.UserDetails;
//import org.springframework.security.core.userdetails.UserDetailsService;
//import org.springframework.security.core.userdetails.UsernameNotFoundException;

import com.example.model.GameDesign;
import com.example.model.User;

@Controller	// This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class GameDesignController {
	@Autowired // This means to get the bean called userRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private GameDesignRepository gameDesignRepository;
	
//	@Autowired
//    private UserService userService;
//
//    @Autowired
//    private UserValidator userValidator;


	@PostMapping(path="/add") // Map ONLY POST Requests
	public @ResponseBody String addNewGameDesign (@RequestParam String game_string, 
			@RequestParam Boolean game_boolean, @RequestParam Integer game_Integer1, 
			@RequestParam Integer game_Integer2) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		GameDesign n = new GameDesign();
		n.setGdstring(game_string);
		n.setGdboolean(game_boolean);
		n.setGdinteger1(game_Integer1);
		n.setGdinteger1(game_Integer2);
		gameDesignRepository.save(n);
		return "Saved";
	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return gameDesignRepository.findAll();
	}

	@PostMapping(path="/get") // Map ONLY POST Requests
	public @ResponseBody User get (@RequestParam String username) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		//throws UsernameNotFoundException{
			return gameDesignRepository.findByUsername(username);
			
		//}
	}
}
